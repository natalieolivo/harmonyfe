{"version":3,"sources":["index.js"],"names":["d","harmonyAPIPort","usersEndpoint","form","document","querySelector","jsonFormData","formToJSON","formElements","reduce","call","data","element","name","value","addEventListener","event","preventDefault","elements","console","log","fetch","method","body","JSON","stringify","headers"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAY;AACT,MAAMC,cAAc,GAAG,IAAvB;AACA,MAAMC,aAAa,GAAG,QAAtB;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAb;AACA,MAAIC,YAAJ,CAJS,CAMT;AACA;AACA;AACA;;AACA,MAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD;AAAA,WAAkB,GAAGC,MAAH,CAAUC,IAAV,CAAeF,YAAf,EAA6B,UAACG,IAAD,EAAOC,OAAP,EAAmB;AAC3ED,MAAAA,IAAI,CAACC,OAAO,CAACC,IAAT,CAAJ,GAAqBD,OAAO,CAACE,KAA7B;AACA,aAAOH,IAAP;AACN,KAHiC,EAG/B,EAH+B,CAAlB;AAAA,GAAjB;;AAKAR,EAAAA,IAAI,CAACY,gBAAL,CAAsB,QAAtB,EAAgC,UAACC,KAAD,EAAW;AACvCA,IAAAA,KAAK,CAACC,cAAN;AACAX,IAAAA,YAAY,GAAGC,UAAU,CAACJ,IAAI,CAACe,QAAN,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBd,YAApB;AACAe,IAAAA,KAAK,4BAAqBpB,cAArB,SAAsCC,aAAtC,GAAuD;AACxDoB,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,YAAf,CAFkD;AAGxDoB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH+C,KAAvD,CAAL;AAOH,GAXD;AAcH,CA7BD,EA6BGtB,QA7BH","file":"harmonyfe.e31bb0bc.js","sourceRoot":"..","sourcesContent":["(function(d) {\n    const harmonyAPIPort = 9999;\n    const usersEndpoint = '/users'; \n    const form = document.querySelector('#userForm');\n    let jsonFormData;\n    \n    // I borrowed this ...\n    // It's basically just mapping reduce function to an object. Need to explore if I can just\n    // use forEach here. What I gain is that third param that I can pass in and reduce to a fully formed\n    // JSON form data, but not sure if that is sensible use of reduce.\n    let formToJSON = (formElements) => [].reduce.call(formElements, (data, element) => {\n            data[element.name] = element.value;\n            return data;\n     }, {}) \n        \n    form.addEventListener('submit', (event) => {\n        event.preventDefault();\n        jsonFormData = formToJSON(form.elements);\n        console.log(\"data\", jsonFormData);\n        fetch(`http://localhost:${harmonyAPIPort}${usersEndpoint}`, {\n            method: 'POST',\n            body: JSON.stringify(jsonFormData),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    });\n\n    \n})(document);"]}